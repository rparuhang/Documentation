{
  "api/AES_Form.AppCanvas.html": {
    "href": "api/AES_Form.AppCanvas.html",
    "title": "Class AppCanvas | mysite",
    "keywords": "Class AppCanvas Namespace AES_Form Assembly AES Form.dll Represents a canvas for graphical drawing operations. Provides methods for drawing shapes, moving the pen, setting colors, and clearing the canvas. Implements the BOOSE.ICanvas interface. public class AppCanvas : ICommand, ICanvas Inheritance object AppCanvas Implements ICommand ICanvas Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AppCanvas() public AppCanvas() Fields XCanvasSize public int XCanvasSize Field Value int YCanvasSize public int YCanvasSize Field Value int Properties PenColour Gets or sets the pen color. public object PenColour { get; set; } Property Value object Xpos Gets or sets the X-coordinate position of the pen. public int Xpos { get; set; } Property Value int Ypos Gets or sets the Y-coordinate position of the pen. public int Ypos { get; set; } Property Value int Methods Circle(int, bool) Draws a circle at the current pen position. public void Circle(int radius, bool filled) Parameters radius int The radius of the circle. filled bool Indicates whether the circle should be filled or just outlined. Exceptions CanvasException Thrown if the radius is negative. Clear() Clears the canvas by filling it with a default gray color. public void Clear() DrawTo(int, int) Draws a line from the current pen position to the specified coordinates. public void DrawTo(int toX, int toY) Parameters toX int The X-coordinate of the endpoint. toY int The Y-coordinate of the endpoint. Exceptions CanvasException Thrown if the specified coordinates are out of bounds. Ellipse(int, int, bool) Draws an ellipse at the current pen position. public void Ellipse(int width, int height, bool filled) Parameters width int The width of the ellipse. height int The height of the ellipse. filled bool Indicates whether the ellipse should be filled or just outlined. Exceptions CanvasException Thrown if the width or height is negative. GetInstance() public static AppCanvas GetInstance() Returns AppCanvas MoveTo(int, int) Moves the pen to the specified coordinates without drawing a line. public void MoveTo(int x, int y) Parameters x int The X-coordinate to move to. y int The Y-coordinate to move to. Exceptions CanvasException Thrown if the specified coordinates are out of bounds. Rect(int, int, bool) Draws a rectangle at the current pen position. public void Rect(int width, int height, bool filled) Parameters width int The width of the rectangle. height int The height of the rectangle. filled bool Indicates whether the rectangle should be filled or just outlined. Exceptions CanvasException Thrown if the width or height is negative. Reset() Resets the pen position to the origin (0,0). public void Reset() Set(int, int) Sets the dimensions of the canvas. public void Set(int xsize, int ysize) Parameters xsize int The width of the canvas. ysize int The height of the canvas. SetColour(int, int, int) Sets the pen color using RGB values. public void SetColour(int red, int green, int blue) Parameters red int The red component (0-255). green int The green component (0-255). blue int The blue component (0-255). Exceptions CanvasException Thrown if any of the RGB values are outside the range 0-255. Tri(int, int) Draws a triangle at the current pen position. public void Tri(int width, int height) Parameters width int The width of the triangle. height int The height of the triangle. Exceptions CanvasException Thrown if the width or height is negative. WriteText(string) Writes text at the current pen position. public void WriteText(string text) Parameters text string The text to write. Exceptions CanvasException Thrown if the text is null or empty. getBitmap() Retrieves the current bitmap representation of the canvas. public object getBitmap() Returns object The bitmap object representing the canvas."
  },
  "api/AES_Form.CommandInvoker.html": {
    "href": "api/AES_Form.CommandInvoker.html",
    "title": "Class CommandInvoker | mysite",
    "keywords": "Class CommandInvoker Namespace AES_Form Assembly AES Form.dll Invokes commands and maintains a history of executed commands. Provides functionality for executing commands and tracking their execution history. public class CommandInvoker Inheritance object CommandInvoker Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteCommand(ICommand) Executes the specified command and stores it in the execution history. public void ExecuteCommand(ICommand command) Parameters command ICommand The command to be executed."
  },
  "api/AES_Form.ForCommand.html": {
    "href": "api/AES_Form.ForCommand.html",
    "title": "Class ForCommand | mysite",
    "keywords": "Class ForCommand Namespace AES_Form Assembly AES Form.dll Represents a command for executing a for-loop structure. Inherits from the BOOSE.For class and overrides its behavior. public class ForCommand : For, ICommand Inheritance object Command Evaluation Boolean ConditionalCommand For ForCommand Implements ICommand Inherited Members For.LoopControlV For.From For.To For.Step ConditionalCommand.endLineNumber ConditionalCommand.EndLineNumber ConditionalCommand.Condition ConditionalCommand.LineNumber ConditionalCommand.CondType ConditionalCommand.ReturnLineNumber Boolean.BoolValue Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors ForCommand() Initializes a new instance of the ForCommand class. public ForCommand() Methods Compile() Compiles the for-loop command. Invokes the base class implementation of the Compile method. public override void Compile() Execute() Executes the for-loop command. Invokes the base class implementation of the Execute method. public override void Execute() Restrictions() Defines any restrictions applicable to the for-loop command. Currently, this method is not implemented and does not enforce any restrictions. public override void Restrictions()"
  },
  "api/AES_Form.Form1.html": {
    "href": "api/AES_Form.Form1.html",
    "title": "Class Form1 | mysite",
    "keywords": "Class Form1 Namespace AES_Form Assembly AES Form.dll Represents the main form for the AES application. This form serves as the entry point for user interactions and includes methods for canvas drawing, parsing commands, and executing stored programs. public class Form1 : Form, IDropTarget, ISynchronizeInvoke, IWin32Window, IBindableComponent, IComponent, IDisposable, IContainerControl Inheritance object MarshalByRefObject Component Control ScrollableControl ContainerControl Form Form1 Implements IDropTarget ISynchronizeInvoke IWin32Window IBindableComponent IComponent IDisposable IContainerControl Inherited Members Form.SetVisibleCore(bool) Form.Activate() Form.ActivateMdiChild(Form) Form.AddOwnedForm(Form) Form.AdjustFormScrollbars(bool) Form.Close() Form.CreateAccessibilityInstance() Form.CreateControlsInstance() Form.CreateHandle() Form.DefWndProc(ref Message) Form.ProcessMnemonic(char) Form.CenterToParent() Form.CenterToScreen() Form.LayoutMdi(MdiLayout) Form.OnActivated(EventArgs) Form.OnBackgroundImageChanged(EventArgs) Form.OnBackgroundImageLayoutChanged(EventArgs) Form.OnClosing(CancelEventArgs) Form.OnClosed(EventArgs) Form.OnFormClosing(FormClosingEventArgs) Form.OnFormClosed(FormClosedEventArgs) Form.OnCreateControl() Form.OnDeactivate(EventArgs) Form.OnEnabledChanged(EventArgs) Form.OnEnter(EventArgs) Form.OnFontChanged(EventArgs) Form.OnGotFocus(EventArgs) Form.OnHandleCreated(EventArgs) Form.OnHandleDestroyed(EventArgs) Form.OnHelpButtonClicked(CancelEventArgs) Form.OnLayout(LayoutEventArgs) Form.OnLoad(EventArgs) Form.OnMaximizedBoundsChanged(EventArgs) Form.OnMaximumSizeChanged(EventArgs) Form.OnMinimumSizeChanged(EventArgs) Form.OnInputLanguageChanged(InputLanguageChangedEventArgs) Form.OnInputLanguageChanging(InputLanguageChangingEventArgs) Form.OnVisibleChanged(EventArgs) Form.OnMdiChildActivate(EventArgs) Form.OnMenuStart(EventArgs) Form.OnMenuComplete(EventArgs) Form.OnPaint(PaintEventArgs) Form.OnResize(EventArgs) Form.OnDpiChanged(DpiChangedEventArgs) Form.OnGetDpiScaledSize(int, int, ref Size) Form.OnRightToLeftLayoutChanged(EventArgs) Form.OnShown(EventArgs) Form.OnTextChanged(EventArgs) Form.ProcessCmdKey(ref Message, Keys) Form.ProcessDialogKey(Keys) Form.ProcessDialogChar(char) Form.ProcessKeyPreview(ref Message) Form.ProcessTabKey(bool) Form.RemoveOwnedForm(Form) Form.Select(bool, bool) Form.ScaleMinMaxSize(float, float, bool) Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified) Form.ScaleControl(SizeF, BoundsSpecified) Form.SetBoundsCore(int, int, int, int, BoundsSpecified) Form.SetClientSizeCore(int, int) Form.SetDesktopBounds(int, int, int, int) Form.SetDesktopLocation(int, int) Form.Show(IWin32Window) Form.ShowDialog() Form.ShowDialog(IWin32Window) Form.ToString() Form.UpdateDefaultButton() Form.OnResizeBegin(EventArgs) Form.OnResizeEnd(EventArgs) Form.OnStyleChanged(EventArgs) Form.ValidateChildren() Form.ValidateChildren(ValidationConstraints) Form.WndProc(ref Message) Form.AcceptButton Form.ActiveForm Form.ActiveMdiChild Form.AllowTransparency Form.AutoScroll Form.AutoSize Form.AutoSizeMode Form.AutoValidate Form.BackColor Form.FormBorderStyle Form.CancelButton Form.ClientSize Form.ControlBox Form.CreateParams Form.DefaultImeMode Form.DefaultSize Form.DesktopBounds Form.DesktopLocation Form.DialogResult Form.HelpButton Form.Icon Form.IsMdiChild Form.IsMdiContainer Form.IsRestrictedWindow Form.KeyPreview Form.Location Form.MaximizedBounds Form.MaximumSize Form.MainMenuStrip Form.MinimumSize Form.MaximizeBox Form.MdiChildren Form.MdiChildrenMinimizedAnchorBottom Form.MdiParent Form.MinimizeBox Form.Modal Form.Opacity Form.OwnedForms Form.Owner Form.RestoreBounds Form.RightToLeftLayout Form.ShowInTaskbar Form.ShowIcon Form.ShowWithoutActivation Form.Size Form.SizeGripStyle Form.StartPosition Form.Text Form.TopLevel Form.TopMost Form.TransparencyKey Form.WindowState Form.AutoSizeChanged Form.AutoValidateChanged Form.HelpButtonClicked Form.MaximizedBoundsChanged Form.MaximumSizeChanged Form.MinimumSizeChanged Form.Activated Form.Deactivate Form.FormClosing Form.FormClosed Form.Load Form.MdiChildActivate Form.MenuComplete Form.MenuStart Form.InputLanguageChanged Form.InputLanguageChanging Form.RightToLeftLayoutChanged Form.Shown Form.DpiChanged Form.ResizeBegin Form.ResizeEnd ContainerControl.OnAutoValidateChanged(EventArgs) ContainerControl.OnMove(EventArgs) ContainerControl.OnParentChanged(EventArgs) ContainerControl.PerformAutoScale() ContainerControl.RescaleConstantsForDpi(int, int) ContainerControl.Validate() ContainerControl.Validate(bool) ContainerControl.AutoScaleDimensions ContainerControl.AutoScaleFactor ContainerControl.AutoScaleMode ContainerControl.BindingContext ContainerControl.CanEnableIme ContainerControl.ActiveControl ContainerControl.CurrentAutoScaleDimensions ContainerControl.ParentForm ScrollableControl.ScrollStateAutoScrolling ScrollableControl.ScrollStateHScrollVisible ScrollableControl.ScrollStateVScrollVisible ScrollableControl.ScrollStateUserHasScrolled ScrollableControl.ScrollStateFullDrag ScrollableControl.GetScrollState(int) ScrollableControl.OnMouseWheel(MouseEventArgs) ScrollableControl.OnRightToLeftChanged(EventArgs) ScrollableControl.OnPaintBackground(PaintEventArgs) ScrollableControl.OnPaddingChanged(EventArgs) ScrollableControl.SetDisplayRectLocation(int, int) ScrollableControl.ScrollControlIntoView(Control) ScrollableControl.ScrollToControl(Control) ScrollableControl.OnScroll(ScrollEventArgs) ScrollableControl.SetAutoScrollMargin(int, int) ScrollableControl.SetScrollState(int, bool) ScrollableControl.AutoScrollMargin ScrollableControl.AutoScrollPosition ScrollableControl.AutoScrollMinSize ScrollableControl.DisplayRectangle ScrollableControl.HScroll ScrollableControl.HorizontalScroll ScrollableControl.VScroll ScrollableControl.VerticalScroll ScrollableControl.Scroll Control.GetAccessibilityObjectById(int) Control.SetAutoSizeMode(AutoSizeMode) Control.GetAutoSizeMode() Control.GetPreferredSize(Size) Control.AccessibilityNotifyClients(AccessibleEvents, int) Control.AccessibilityNotifyClients(AccessibleEvents, int, int) Control.BeginInvoke(Delegate) Control.BeginInvoke(Action) Control.BeginInvoke(Delegate, params object[]) Control.BringToFront() Control.Contains(Control) Control.CreateGraphics() Control.CreateControl() Control.DestroyHandle() Control.DoDragDrop(object, DragDropEffects) Control.DoDragDrop(object, DragDropEffects, Bitmap, Point, bool) Control.DrawToBitmap(Bitmap, Rectangle) Control.EndInvoke(IAsyncResult) Control.FindForm() Control.GetTopLevel() Control.RaiseKeyEvent(object, KeyEventArgs) Control.RaiseMouseEvent(object, MouseEventArgs) Control.Focus() Control.FromChildHandle(nint) Control.FromHandle(nint) Control.GetChildAtPoint(Point, GetChildAtPointSkip) Control.GetChildAtPoint(Point) Control.GetContainerControl() Control.GetNextControl(Control, bool) Control.GetStyle(ControlStyles) Control.Hide() Control.InitLayout() Control.Invalidate(Region) Control.Invalidate(Region, bool) Control.Invalidate() Control.Invalidate(bool) Control.Invalidate(Rectangle) Control.Invalidate(Rectangle, bool) Control.Invoke(Action) Control.Invoke(Delegate) Control.Invoke(Delegate, params object[]) Control.Invoke<T>(Func<T>) Control.InvokePaint(Control, PaintEventArgs) Control.InvokePaintBackground(Control, PaintEventArgs) Control.IsKeyLocked(Keys) Control.IsInputChar(char) Control.IsInputKey(Keys) Control.IsMnemonic(char, string) Control.LogicalToDeviceUnits(int) Control.LogicalToDeviceUnits(Size) Control.ScaleBitmapLogicalToDevice(ref Bitmap) Control.NotifyInvalidate(Rectangle) Control.InvokeOnClick(Control, EventArgs) Control.OnAutoSizeChanged(EventArgs) Control.OnBackColorChanged(EventArgs) Control.OnBindingContextChanged(EventArgs) Control.OnCausesValidationChanged(EventArgs) Control.OnContextMenuStripChanged(EventArgs) Control.OnCursorChanged(EventArgs) Control.OnDataContextChanged(EventArgs) Control.OnDockChanged(EventArgs) Control.OnForeColorChanged(EventArgs) Control.OnNotifyMessage(Message) Control.OnParentBackColorChanged(EventArgs) Control.OnParentBackgroundImageChanged(EventArgs) Control.OnParentBindingContextChanged(EventArgs) Control.OnParentCursorChanged(EventArgs) Control.OnParentDataContextChanged(EventArgs) Control.OnParentEnabledChanged(EventArgs) Control.OnParentFontChanged(EventArgs) Control.OnParentForeColorChanged(EventArgs) Control.OnParentRightToLeftChanged(EventArgs) Control.OnParentVisibleChanged(EventArgs) Control.OnPrint(PaintEventArgs) Control.OnTabIndexChanged(EventArgs) Control.OnTabStopChanged(EventArgs) Control.OnClick(EventArgs) Control.OnClientSizeChanged(EventArgs) Control.OnControlAdded(ControlEventArgs) Control.OnControlRemoved(ControlEventArgs) Control.OnLocationChanged(EventArgs) Control.OnDoubleClick(EventArgs) Control.OnDragEnter(DragEventArgs) Control.OnDragOver(DragEventArgs) Control.OnDragLeave(EventArgs) Control.OnDragDrop(DragEventArgs) Control.OnGiveFeedback(GiveFeedbackEventArgs) Control.InvokeGotFocus(Control, EventArgs) Control.OnHelpRequested(HelpEventArgs) Control.OnInvalidated(InvalidateEventArgs) Control.OnKeyDown(KeyEventArgs) Control.OnKeyPress(KeyPressEventArgs) Control.OnKeyUp(KeyEventArgs) Control.OnLeave(EventArgs) Control.InvokeLostFocus(Control, EventArgs) Control.OnLostFocus(EventArgs) Control.OnMarginChanged(EventArgs) Control.OnMouseDoubleClick(MouseEventArgs) Control.OnMouseClick(MouseEventArgs) Control.OnMouseCaptureChanged(EventArgs) Control.OnMouseDown(MouseEventArgs) Control.OnMouseEnter(EventArgs) Control.OnMouseLeave(EventArgs) Control.OnDpiChangedBeforeParent(EventArgs) Control.OnDpiChangedAfterParent(EventArgs) Control.OnMouseHover(EventArgs) Control.OnMouseMove(MouseEventArgs) Control.OnMouseUp(MouseEventArgs) Control.OnQueryContinueDrag(QueryContinueDragEventArgs) Control.OnRegionChanged(EventArgs) Control.OnPreviewKeyDown(PreviewKeyDownEventArgs) Control.OnSizeChanged(EventArgs) Control.OnChangeUICues(UICuesEventArgs) Control.OnSystemColorsChanged(EventArgs) Control.OnValidating(CancelEventArgs) Control.OnValidated(EventArgs) Control.PerformLayout() Control.PerformLayout(Control, string) Control.PointToClient(Point) Control.PointToScreen(Point) Control.PreProcessMessage(ref Message) Control.PreProcessControlMessage(ref Message) Control.ProcessKeyEventArgs(ref Message) Control.ProcessKeyMessage(ref Message) Control.RaiseDragEvent(object, DragEventArgs) Control.RaisePaintEvent(object, PaintEventArgs) Control.RecreateHandle() Control.RectangleToClient(Rectangle) Control.RectangleToScreen(Rectangle) Control.ReflectMessage(nint, ref Message) Control.Refresh() Control.ResetMouseEventArgs() Control.ResetText() Control.ResumeLayout() Control.ResumeLayout(bool) Control.Scale(SizeF) Control.Select() Control.SelectNextControl(Control, bool, bool, bool, bool) Control.SendToBack() Control.SetBounds(int, int, int, int) Control.SetBounds(int, int, int, int, BoundsSpecified) Control.SizeFromClientSize(Size) Control.SetStyle(ControlStyles, bool) Control.SetTopLevel(bool) Control.RtlTranslateAlignment(HorizontalAlignment) Control.RtlTranslateAlignment(LeftRightAlignment) Control.RtlTranslateAlignment(ContentAlignment) Control.RtlTranslateHorizontal(HorizontalAlignment) Control.RtlTranslateLeftRight(LeftRightAlignment) Control.RtlTranslateContent(ContentAlignment) Control.Show() Control.SuspendLayout() Control.Update() Control.UpdateBounds() Control.UpdateBounds(int, int, int, int) Control.UpdateBounds(int, int, int, int, int, int) Control.UpdateZOrder() Control.UpdateStyles() Control.OnImeModeChanged(EventArgs) Control.AccessibilityObject Control.AccessibleDefaultActionDescription Control.AccessibleDescription Control.AccessibleName Control.AccessibleRole Control.AllowDrop Control.Anchor Control.AutoScrollOffset Control.LayoutEngine Control.DataContext Control.BackgroundImage Control.BackgroundImageLayout Control.Bottom Control.Bounds Control.CanFocus Control.CanRaiseEvents Control.CanSelect Control.Capture Control.CausesValidation Control.CheckForIllegalCrossThreadCalls Control.ClientRectangle Control.CompanyName Control.ContainsFocus Control.ContextMenuStrip Control.Controls Control.Created Control.Cursor Control.DataBindings Control.DefaultBackColor Control.DefaultCursor Control.DefaultFont Control.DefaultForeColor Control.DefaultMargin Control.DefaultMaximumSize Control.DefaultMinimumSize Control.DefaultPadding Control.DeviceDpi Control.IsDisposed Control.Disposing Control.Dock Control.DoubleBuffered Control.Enabled Control.Focused Control.Font Control.FontHeight Control.ForeColor Control.Handle Control.HasChildren Control.Height Control.IsHandleCreated Control.InvokeRequired Control.IsAccessible Control.IsAncestorSiteInDesignMode Control.IsMirrored Control.Left Control.Margin Control.ModifierKeys Control.MouseButtons Control.MousePosition Control.Name Control.Parent Control.ProductName Control.ProductVersion Control.RecreatingHandle Control.Region Control.RenderRightToLeft Control.ResizeRedraw Control.Right Control.RightToLeft Control.ScaleChildren Control.Site Control.TabIndex Control.TabStop Control.Tag Control.Top Control.TopLevelControl Control.ShowKeyboardCues Control.ShowFocusCues Control.UseWaitCursor Control.Visible Control.Width Control.PreferredSize Control.Padding Control.ImeMode Control.ImeModeBase Control.PropagatingImeMode Control.BackColorChanged Control.BackgroundImageChanged Control.BackgroundImageLayoutChanged Control.BindingContextChanged Control.CausesValidationChanged Control.ClientSizeChanged Control.ContextMenuStripChanged Control.CursorChanged Control.DockChanged Control.EnabledChanged Control.FontChanged Control.ForeColorChanged Control.LocationChanged Control.MarginChanged Control.RegionChanged Control.RightToLeftChanged Control.SizeChanged Control.TabIndexChanged Control.TabStopChanged Control.TextChanged Control.VisibleChanged Control.Click Control.ControlAdded Control.ControlRemoved Control.DataContextChanged Control.DragDrop Control.DragEnter Control.DragOver Control.DragLeave Control.GiveFeedback Control.HandleCreated Control.HandleDestroyed Control.HelpRequested Control.Invalidated Control.PaddingChanged Control.Paint Control.QueryContinueDrag Control.QueryAccessibilityHelp Control.DoubleClick Control.Enter Control.GotFocus Control.KeyDown Control.KeyPress Control.KeyUp Control.Layout Control.Leave Control.LostFocus Control.MouseClick Control.MouseDoubleClick Control.MouseCaptureChanged Control.MouseDown Control.MouseEnter Control.MouseLeave Control.DpiChangedBeforeParent Control.DpiChangedAfterParent Control.MouseHover Control.MouseMove Control.MouseUp Control.MouseWheel Control.Move Control.PreviewKeyDown Control.Resize Control.ChangeUICues Control.StyleChanged Control.SystemColorsChanged Control.Validating Control.Validated Control.ParentChanged Control.ImeModeChanged Component.Dispose() Component.GetService(Type) Component.Container Component.DesignMode Component.Events Component.Disposed MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors Form1() Initializes a new instance of the Form1 class. Sets up the canvas, initializes required objects, and performs initial drawing operations. public Form1() Methods Dispose(bool) Clean up any resources being used. protected override void Dispose(bool disposing) Parameters disposing bool true if managed resources should be disposed; otherwise, false. pictureBox1_Paint(object, PaintEventArgs) Handles the Paint event for the PictureBox control. Draws the canvas bitmap onto the PictureBox. protected void pictureBox1_Paint(object sender, PaintEventArgs e) Parameters sender object The source of the event. e PaintEventArgs The paint event data."
  },
  "api/AES_Form.ICommand.html": {
    "href": "api/AES_Form.ICommand.html",
    "title": "Interface ICommand | mysite",
    "keywords": "Interface ICommand Namespace AES_Form Assembly AES Form.dll Represents a command interface that extends the BOOSE.ICanvas interface. Includes additional methods for graphical operations. public interface ICommand : ICanvas Inherited Members ICanvas.Set(int, int) ICanvas.SetColour(int, int, int) ICanvas.MoveTo(int, int) ICanvas.DrawTo(int, int) ICanvas.Clear() ICanvas.Reset() ICanvas.Circle(int, bool) ICanvas.Rect(int, int, bool) ICanvas.Tri(int, int) ICanvas.WriteText(string) ICanvas.getBitmap() ICanvas.Xpos ICanvas.Ypos ICanvas.PenColour Methods Ellipse(int, int, bool) Draws an ellipse at the current pen position. void Ellipse(int width, int height, bool filled) Parameters width int The width of the ellipse. height int The height of the ellipse. filled bool Indicates whether the ellipse should be filled or just outlined. Execute() void Execute()"
  },
  "api/AES_Form.IntCommand.html": {
    "href": "api/AES_Form.IntCommand.html",
    "title": "Class IntCommand | mysite",
    "keywords": "Class IntCommand Namespace AES_Form Assembly AES Form.dll Represents a command for handling integer-related operations. Inherits from the BOOSE.Int class and overrides its behavior. public class IntCommand : Int, ICommand Inheritance object Command Evaluation Int IntCommand Implements ICommand Inherited Members Evaluation.expression Evaluation.evaluatedExpression Evaluation.varName Evaluation.value Evaluation.CheckParameters(string[]) Evaluation.ProcessExpression(string) Evaluation.Expression Evaluation.VarName Evaluation.Value Evaluation.Local Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors IntCommand() Initializes a new instance of the IntCommand class. public IntCommand() Methods Compile() Compiles the integer command. Invokes the base class implementation of the Compile method. public override void Compile() Execute() Executes the integer command. Invokes the base class implementation of the Execute method. public override void Execute() Restrictions() Defines any restrictions applicable to the integer command. Currently, this method is not implemented and does not enforce any restrictions. public override void Restrictions()"
  },
  "api/AES_Form.Tests.AppCanvasTests.html": {
    "href": "api/AES_Form.Tests.AppCanvasTests.html",
    "title": "Class AppCanvasTests | mysite",
    "keywords": "Class AppCanvasTests Namespace AES_Form.Tests Assembly TestProjectForm.dll [TestClass] public class AppCanvasTests Inheritance object AppCanvasTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Setup() [TestInitialize] public void Setup() TestCircleDrawing() [TestMethod] public void TestCircleDrawing() TestClearCanvas() [TestMethod] public void TestClearCanvas() TestDefaultCanvasSize() [TestMethod] public void TestDefaultCanvasSize() TestDrawTo() [TestMethod] public void TestDrawTo() TestDrawToInvalidPosition() [TestMethod] [ExpectedException(typeof(CanvasException))] public void TestDrawToInvalidPosition() TestRectangleDrawing() [TestMethod] public void TestRectangleDrawing() TestRectangleInvalidDimensions() [TestMethod] [ExpectedException(typeof(CanvasException))] public void TestRectangleInvalidDimensions() TestSetCanvasSize() [TestMethod] public void TestSetCanvasSize() TestSetColour() [TestMethod] public void TestSetColour() TestSetColourInvalid() [TestMethod] [ExpectedException(typeof(CanvasException))] public void TestSetColourInvalid() TestSetPenPosition() [TestMethod] public void TestSetPenPosition() TestSingletonInstance() [TestMethod] public void TestSingletonInstance() TestTriangleDrawing() [TestMethod] public void TestTriangleDrawing() TestWriteText() [TestMethod] public void TestWriteText()"
  },
  "api/AES_Form.Tests.html": {
    "href": "api/AES_Form.Tests.html",
    "title": "Namespace AES_Form.Tests | mysite",
    "keywords": "Namespace AES_Form.Tests Classes AppCanvasTests"
  },
  "api/AES_Form.Triangle.html": {
    "href": "api/AES_Form.Triangle.html",
    "title": "Class Triangle | mysite",
    "keywords": "Class Triangle Namespace AES_Form Assembly AES Form.dll Represents a command to draw a triangle on the canvas using the provided parameters. Implements the ICommand interface for use with the CommandInvoker. public class Triangle : CommandTwoParameters, ICommand Inheritance object Command CanvasCommand CommandOneParameter CommandTwoParameters Triangle Implements ICommand Inherited Members CommandTwoParameters.param2 CommandTwoParameters.param2unprocessed CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods CheckParameters(string[]) Checks the validity of the parameters provided for the triangle. Ensures that the parameters are correctly formatted and within expected ranges. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions FormatException Thrown if the parameters cannot be parsed into the expected format. ArgumentOutOfRangeException Thrown if the parameters are outside of acceptable ranges. Execute() Executes the command to draw a triangle on the canvas. This method uses the parameters to create and draw a triangle shape. public override void Execute() Remarks This method retrieves the width and height from the parameters list and uses the canvas's Tri method to render the triangle. Exceptions ArgumentException Thrown if the parameters are invalid or not properly set before execution."
  },
  "api/AES_Form.WriteLine.html": {
    "href": "api/AES_Form.WriteLine.html",
    "title": "Class WriteLine | mysite",
    "keywords": "Class WriteLine Namespace AES_Form Assembly AES Form.dll Represents a command to write text on the canvas. Inherits from BOOSE.CommandOneParameter and overrides the Execute() and CheckParameters(string[]) methods. public class WriteLine : CommandOneParameter, ICommand Inheritance object Command CanvasCommand CommandOneParameter WriteLine Implements ICommand Inherited Members CommandOneParameter.param1 CommandOneParameter.param1unprocessed CanvasCommand.yPos CanvasCommand.xPos CanvasCommand.canvas CanvasCommand.Canvas Command.program Command.parameterList Command.parameters Command.paramsint Command.Set(StoredProgram, string) Command.Compile() Command.ProcessParameters(string) Command.ToString() Command.Program Command.Name Command.ParameterList Command.Parameters Command.Paramsint object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors WriteLine() Initializes a new instance of the WriteLine class. public WriteLine() WriteLine(Canvas, string) Initializes a new instance of the WriteLine class with the specified canvas and text. public WriteLine(Canvas c, string name) Parameters c Canvas The canvas on which to write the text. name string The name or text to be written on the canvas. Methods CheckParameters(string[]) Checks the validity of the parameters provided for writing text on the canvas. Ensures that the parameters are valid and correctly formatted. public override void CheckParameters(string[] parameterList) Parameters parameterList string[] The list of parameters to validate. Exceptions CommandException Thrown if the parameters are invalid or if an error occurs during validation. Execute() Executes the command to write text on the canvas. This method retrieves the text from the provided parameters and writes it on the canvas. public override void Execute()"
  },
  "api/AES_Form.html": {
    "href": "api/AES_Form.html",
    "title": "Namespace AES_Form | mysite",
    "keywords": "Namespace AES_Form Classes AppCanvas Represents a canvas for graphical drawing operations. Provides methods for drawing shapes, moving the pen, setting colors, and clearing the canvas. Implements the BOOSE.ICanvas interface. CommandInvoker Invokes commands and maintains a history of executed commands. Provides functionality for executing commands and tracking their execution history. ForCommand Represents a command for executing a for-loop structure. Inherits from the BOOSE.For class and overrides its behavior. Form1 Represents the main form for the AES application. This form serves as the entry point for user interactions and includes methods for canvas drawing, parsing commands, and executing stored programs. IntCommand Represents a command for handling integer-related operations. Inherits from the BOOSE.Int class and overrides its behavior. Triangle Represents a command to draw a triangle on the canvas using the provided parameters. Implements the ICommand interface for use with the CommandInvoker. WriteLine Represents a command to write text on the canvas. Inherits from BOOSE.CommandOneParameter and overrides the Execute() and CheckParameters(string[]) methods. Interfaces ICommand Represents a command interface that extends the BOOSE.ICanvas interface. Includes additional methods for graphical operations."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | mysite",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | mysite",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | mysite",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}